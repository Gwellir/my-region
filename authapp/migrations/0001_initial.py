# Generated by Django 3.1.6 on 2021-02-26 17:44

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
from django.utils.timezone import utc
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, upload_to='user_pics')),
                ('date_of_birth', models.DateField(default=django.utils.timezone.now, verbose_name='Дата рождения')),
                ('activation_key', models.CharField(blank=True, max_length=128, verbose_name='Ключ активации')),
                ('activation_key_expiry', models.DateTimeField(default=datetime.datetime(2021, 2, 27, 17, 44, 46, 132302, tzinfo=utc), verbose_name='Крайний срок текущей активации')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Адрес Email')),
                ('is_instructor', models.BooleanField(db_index=True, default=False)),
                ('is_traveler', models.BooleanField(db_index=True, default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, verbose_name='О себе')),
                ('home_region', models.CharField(blank=True, max_length=100, verbose_name='Место проживания')),
                ('routes_run', models.IntegerField(default=0, verbose_name='Пройдено маршрутов')),
                ('is_active', models.BooleanField(default=True, verbose_name='Инструктор доступен для маршрута')),
            ],
        ),
        migrations.CreateModel(
            name='Traveler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, verbose_name='О себе')),
                ('home_region', models.CharField(max_length=100, verbose_name='Место проживания')),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to='authapp.Instructor', verbose_name='Подписки')),
            ],
        ),
    ]
